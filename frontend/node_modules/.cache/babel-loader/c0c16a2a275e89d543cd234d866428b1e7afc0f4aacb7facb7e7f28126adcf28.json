{"ast":null,"code":"var _jsxFileName = \"/home/coga/Desktop/pass/frontend/src/FileUpload.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// function FileUpload() {\n//   const [fileInput1, setFileInput1] = useState(null);\n//   const [fileInput2, setFileInput2] = useState(null);\n//   const [filenames, setFilenames] = useState([]);\n\n//   const handleFileChange1 = (event) => {\n//     setFileInput1(event.target.files);\n//   };\n\n//   const handleFileChange2 = (event) => {\n//     setFileInput2(event.target.files);\n//   };\n\n//   const handleUpload = async () => {\n//     const formData = new FormData();\n//     for (let i = 0; i < fileInput1.length; i++) {\n//       formData.append(\"files1\", fileInput1[i]);\n//     }\n\n//     for (let i = 0; i < fileInput2.length; i++) {\n//       formData.append(\"files2\", fileInput2[i]);\n//     }\n\n//     try {\n//       const response = await axios.post('http://localhost:5000/api/upload', formData);\n//       setFilenames([...filenames, ...response.data.filenames]);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"file\" multiple onChange={handleFileChange1} />\n//       <input type=\"file\" multiple onChange={handleFileChange2} />\n//       <button onClick={handleUpload}>Upload</button>\n//       <ul>\n//         {filenames.map((filename, index) => (\n//           <li key={index}>{filename}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default FileUpload;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload() {\n  _s();\n  const [fileInput1, setFileInput1] = useState(null);\n  const [fileInput2, setFileInput2] = useState(null);\n  const [filenames, setFilenames] = useState([]);\n  const [cksums, setCksums] = useState([]);\n  const [same, setSame] = useState(null);\n  const handleFileChange1 = event => {\n    setFileInput1(event.target.files);\n  };\n  const handleFileChange2 = event => {\n    setFileInput2(event.target.files);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    for (let i = 0; i < fileInput1.length; i++) {\n      formData.append(\"files1\", fileInput1[i]);\n    }\n    for (let i = 0; i < fileInput2.length; i++) {\n      formData.append(\"files2\", fileInput2[i]);\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/upload', formData);\n      setFilenames([...filenames, ...response.data.filenames.slice(0, fileInput1.length)]);\n      setCksums([...cksums, ...response.data.cksums.slice(0, fileInput1.length)]);\n      setSame(response.data.cksums.slice(0, fileInput1.length).every((val, i) => val === response.data.cksums.slice(fileInput1.length, fileInput1.length + fileInput2.length)[i]));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleFileChange1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleFileChange2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), same === null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No files uploaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"The files are \", same ? \"the same\" : \"different\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 51\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filenames.map((filename, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [filename, \": \", cksums[index]]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"egunZ+tc9zfTPS4JA+C2N+a4eY4=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","FileUpload","fileInput1","setFileInput1","fileInput2","setFileInput2","filenames","setFilenames","cksums","setCksums","same","setSame","handleFileChange1","event","target","files","handleFileChange2","handleUpload","formData","FormData","i","length","append","response","post","data","slice","every","val","error","console","map","filename","index"],"sources":["/home/coga/Desktop/pass/frontend/src/FileUpload.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// function FileUpload() {\n//   const [fileInput1, setFileInput1] = useState(null);\n//   const [fileInput2, setFileInput2] = useState(null);\n//   const [filenames, setFilenames] = useState([]);\n\n//   const handleFileChange1 = (event) => {\n//     setFileInput1(event.target.files);\n//   };\n  \n//   const handleFileChange2 = (event) => {\n//     setFileInput2(event.target.files);\n//   };\n\n//   const handleUpload = async () => {\n//     const formData = new FormData();\n//     for (let i = 0; i < fileInput1.length; i++) {\n//       formData.append(\"files1\", fileInput1[i]);\n//     }\n    \n//     for (let i = 0; i < fileInput2.length; i++) {\n//       formData.append(\"files2\", fileInput2[i]);\n//     }\n\n//     try {\n//       const response = await axios.post('http://localhost:5000/api/upload', formData);\n//       setFilenames([...filenames, ...response.data.filenames]);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"file\" multiple onChange={handleFileChange1} />\n//       <input type=\"file\" multiple onChange={handleFileChange2} />\n//       <button onClick={handleUpload}>Upload</button>\n//       <ul>\n//         {filenames.map((filename, index) => (\n//           <li key={index}>{filename}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default FileUpload;\n\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction FileUpload() {\n  const [fileInput1, setFileInput1] = useState(null);\n  const [fileInput2, setFileInput2] = useState(null);\n  const [filenames, setFilenames] = useState([]);\n  const [cksums, setCksums] = useState([]);\n  const [same, setSame] = useState(null);\n\n  const handleFileChange1 = (event) => {\n    setFileInput1(event.target.files);\n  };\n\n  const handleFileChange2 = (event) => {\n    setFileInput2(event.target.files);\n  };\n\n  const handleUpload = async () => {\n    const formData = new FormData();\n    for (let i = 0; i < fileInput1.length; i++) {\n      formData.append(\"files1\", fileInput1[i]);\n    }\n    for (let i = 0; i < fileInput2.length; i++) {\n      formData.append(\"files2\", fileInput2[i]);\n    }\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/upload', formData);\n      setFilenames([...filenames, ...response.data.filenames.slice(0, fileInput1.length)]);\n      setCksums([...cksums, ...response.data.cksums.slice(0, fileInput1.length)]);\n      setSame(response.data.cksums.slice(0, fileInput1.length).every((val, i) => val === response.data.cksums.slice(fileInput1.length, fileInput1.length + fileInput2.length)[i]));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" multiple onChange={handleFileChange1} />\n      <input type=\"file\" multiple onChange={handleFileChange2} />\n      <button onClick={handleUpload}>Upload</button>\n      {same === null ? <p>No files uploaded</p> : <p>The files are {same ? \"the same\" : \"different\"}</p>}\n      <ul>\n        {filenames.map((filename, index) => (\n          <li key={index}>{filename}: {cksums[index]}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default FileUpload;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}