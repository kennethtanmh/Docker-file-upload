{"ast":null,"code":"var _jsxFileName = \"/home/coga/Desktop/pass/frontend/src/FileUpload.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// function FileUpload() {\n//   const [fileInput, setFileInput] = useState(null);\n//   const [filenames, setFilenames] = useState([]);\n\n//   const handleFileChange = (event) => {\n//     setFileInput(event.target.files);\n//   };\n\n//   const handleUpload = async () => {\n//     const formData = new FormData();\n//     for (let i = 0; i < fileInput.length; i++) {\n//       formData.append(\"files\", fileInput[i]);\n//     }\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/api/upload\", formData);\n//       setFilenames([...filenames, ...response.data.filenames]);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"file\" multiple onChange={handleFileChange} />\n//       <button onClick={handleUpload}>Upload</button>\n//       <ul>\n//         {filenames.map((filename, index) => (\n//           <li key={index}>{filename}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default FileUpload;\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const FileUpload = () => {\n// const [file, setFile] = useState(null);\n// const [filenames, setFilenames] = useState([]);\n// const [checksumMatch, setChecksumMatch] = useState(null);\n\n// const handleFileChange = (e) => {\n// setFile(e.target.files[0]);\n// };\n\n// const handleUpload = async (e) => {\n// e.preventDefault();\n// const formData = new FormData();\n// formData.append(\"file\", file);\n// try {\n// const response = await axios.post(\"http://localhost:5000/api/upload\", formData);\n// if (response.data.error) {\n// setChecksumMatch(false);\n// } else {\n// setFilenames(response.data.filenames);\n// setChecksumMatch(true);\n// }\n// } catch (error) {\n// console.error(error);\n// }\n// };\n\n// return (\n// <div>\n// <form>\n// <input type=\"file\" onChange={handleFileChange} />\n// <button type=\"submit\" onClick={handleUpload}>\n// Upload\n// </button>\n// </form>\n// {filenames.length > 0 && (\n// <div>\n// <p>Files uploaded successfully:</p>\n// <ul>\n// {filenames.map((filename) => (\n// <li key={filename}>{filename}</li>\n// ))}\n// </ul>\n// </div>\n// )}\n// {checksumMatch === false && <p>File with the same name but different content already exists</p>}\n// {checksumMatch === true && <p>File checksum matches</p>}\n// </div>\n// );\n// };\n\n// export default FileUpload;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload() {\n  _s();\n  const [fileInput, setFileInput] = useState(null);\n  const [filenames, setFilenames] = useState([]);\n  const [checksum, setChecksum] = useState(null);\n  const handleFileChange = event => {\n    setFileInput(event.target.files);\n  };\n  const handleUpload = async () => {\n    if (fileInput.length !== 2) {\n      console.error(\"Please select two files for comparison\");\n      return;\n    }\n    const formData = new FormData();\n    for (let i = 0; i < fileInput.length; i++) {\n      formData.append(\"files\", fileInput[i]);\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/upload\", formData);\n      setFilenames([...filenames, ...response.data.filenames]);\n      setChecksum(response.data.checksum);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filenames.map((filename, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: filename\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), checksum && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Checksum: \", checksum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"FomqgFHUnvBkultlkPmIhPuscCk=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","FileUpload","fileInput","setFileInput","filenames","setFilenames","checksum","setChecksum","handleFileChange","event","target","files","handleUpload","length","console","error","formData","FormData","i","append","response","post","data","map","filename","index"],"sources":["/home/coga/Desktop/pass/frontend/src/FileUpload.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// function FileUpload() {\n//   const [fileInput, setFileInput] = useState(null);\n//   const [filenames, setFilenames] = useState([]);\n\n//   const handleFileChange = (event) => {\n//     setFileInput(event.target.files);\n//   };\n\n//   const handleUpload = async () => {\n//     const formData = new FormData();\n//     for (let i = 0; i < fileInput.length; i++) {\n//       formData.append(\"files\", fileInput[i]);\n//     }\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/api/upload\", formData);\n//       setFilenames([...filenames, ...response.data.filenames]);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"file\" multiple onChange={handleFileChange} />\n//       <button onClick={handleUpload}>Upload</button>\n//       <ul>\n//         {filenames.map((filename, index) => (\n//           <li key={index}>{filename}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default FileUpload;\n\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const FileUpload = () => {\n// const [file, setFile] = useState(null);\n// const [filenames, setFilenames] = useState([]);\n// const [checksumMatch, setChecksumMatch] = useState(null);\n\n// const handleFileChange = (e) => {\n// setFile(e.target.files[0]);\n// };\n\n// const handleUpload = async (e) => {\n// e.preventDefault();\n// const formData = new FormData();\n// formData.append(\"file\", file);\n// try {\n// const response = await axios.post(\"http://localhost:5000/api/upload\", formData);\n// if (response.data.error) {\n// setChecksumMatch(false);\n// } else {\n// setFilenames(response.data.filenames);\n// setChecksumMatch(true);\n// }\n// } catch (error) {\n// console.error(error);\n// }\n// };\n\n// return (\n// <div>\n// <form>\n// <input type=\"file\" onChange={handleFileChange} />\n// <button type=\"submit\" onClick={handleUpload}>\n// Upload\n// </button>\n// </form>\n// {filenames.length > 0 && (\n// <div>\n// <p>Files uploaded successfully:</p>\n// <ul>\n// {filenames.map((filename) => (\n// <li key={filename}>{filename}</li>\n// ))}\n// </ul>\n// </div>\n// )}\n// {checksumMatch === false && <p>File with the same name but different content already exists</p>}\n// {checksumMatch === true && <p>File checksum matches</p>}\n// </div>\n// );\n// };\n\n// export default FileUpload;\n\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction FileUpload() {\n  const [fileInput, setFileInput] = useState(null);\n  const [filenames, setFilenames] = useState([]);\n  const [checksum, setChecksum] = useState(null);\n\n  const handleFileChange = (event) => {\n    setFileInput(event.target.files);\n  };\n\n  const handleUpload = async () => {\n    if (fileInput.length !== 2) {\n      console.error(\"Please select two files for comparison\");\n      return;\n    }\n\n    const formData = new FormData();\n    for (let i = 0; i < fileInput.length; i++) {\n      formData.append(\"files\", fileInput[i]);\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/upload\", formData);\n      setFilenames([...filenames, ...response.data.filenames]);\n      setChecksum(response.data.checksum);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" multiple onChange={handleFileChange} />\n      <button onClick={handleUpload}>Upload</button>\n      <ul>\n        {filenames.map((filename, index) => (\n          <li key={index}>{filename}</li>\n        ))}\n      </ul>\n      {checksum && <p>Checksum: {checksum}</p>}\n    </div>\n  );\n}\n\nexport default FileUpload;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,UAAU,GAAG;EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAClCN,YAAY,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,YAAY,GAAG,YAAY;IAC/B,IAAIV,SAAS,CAACW,MAAM,KAAK,CAAC,EAAE;MAC1BC,OAAO,CAACC,KAAK,CAAC,wCAAwC,CAAC;MACvD;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhB,SAAS,CAACW,MAAM,EAAEK,CAAC,EAAE,EAAE;MACzCF,QAAQ,CAACG,MAAM,CAAC,OAAO,EAAEjB,SAAS,CAACgB,CAAC,CAAC,CAAC;IACxC;IAEA,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,kCAAkC,EAAEL,QAAQ,CAAC;MAC/EX,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE,GAAGgB,QAAQ,CAACE,IAAI,CAAClB,SAAS,CAAC,CAAC;MACxDG,WAAW,CAACa,QAAQ,CAACE,IAAI,CAAChB,QAAQ,CAAC;IACrC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAO,IAAI,EAAC,MAAM;MAAC,QAAQ;MAAC,QAAQ,EAAEP;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1D;MAAQ,OAAO,EAAEI,YAAa;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS,eAC9C;MAAA,UACGR,SAAS,CAACmB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7B;QAAA,UAAiBD;MAAQ,GAAhBC,KAAK;QAAA;QAAA;QAAA;MAAA,QACf;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,EACJnB,QAAQ,iBAAI;MAAA,WAAG,YAAU,EAACA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACpC;AAEV;AAAC,GAzCQL,UAAU;AAAA,KAAVA,UAAU;AA2CnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}