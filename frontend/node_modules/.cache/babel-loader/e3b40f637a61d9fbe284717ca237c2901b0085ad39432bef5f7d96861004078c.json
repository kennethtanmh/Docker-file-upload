{"ast":null,"code":"var _jsxFileName = \"/home/coga/Desktop/pass/frontend/src/FileUpload.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// function FileUpload() {\n//   const [fileInput1, setFileInput1] = useState(null);\n//   const [fileInput2, setFileInput2] = useState(null);\n//   const [filenames, setFilenames] = useState([]);\n//   const [isIdentical, setIsIdentical] = useState(null);\n\n//   const handleFileChange1 = (event) => {\n//     setFileInput1(event.target.files);\n//   };\n\n//   const handleFileChange2 = (event) => {\n//     setFileInput2(event.target.files);\n//   };\n\n//   const handleUpload = async () => {\n//     const formData = new FormData();\n//     for (let i = 0; i < fileInput1.length; i++) {\n//       formData.append(\"files1\", fileInput1[i]);\n//     }\n\n//     for (let i = 0; i < fileInput2.length; i++) {\n//       formData.append(\"files2\", fileInput2[i]);\n//     }\n\n//     try {\n//       const response = await axios.post('http://localhost:5000/api/upload', formData);\n//       setFilenames([...filenames, ...response.data.filenames]);\n//       const checksum1 = response.data.checksum1;\n//       const checksum2 = response.data.checksum2;\n//       setIsIdentical(checksum1 === checksum2);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"file\" multiple onChange={handleFileChange1} />\n//       <input type=\"file\" multiple onChange={handleFileChange2} />\n//       <button onClick={handleUpload}>Upload</button>\n//       <ul>\n//         {filenames.map((filename, index) => (\n//           <li key={index}>{filename}</li>\n//         ))}\n//       </ul>\n//       {isIdentical === true && <div>The files are identical.</div>}\n//       {isIdentical === false && <div>The files are different.</div>}\n//     </div>\n//   );\n// }\n\n// export default FileUpload;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload() {\n  _s();\n  const [fileInput1, setFileInput1] = useState(null);\n  const [fileInput2, setFileInput2] = useState(null);\n  const [isIdentical, setIsIdentical] = useState(null);\n  const handleFileChange1 = event => {\n    setFileInput1(event.target.files);\n  };\n  const handleFileChange2 = event => {\n    setFileInput2(event.target.files);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    for (let i = 0; i < fileInput1.length; i++) {\n      formData.append(\"files1\", fileInput1[i]);\n    }\n    for (let i = 0; i < fileInput2.length; i++) {\n      formData.append(\"files2\", fileInput2[i]);\n    }\n    try {\n      await axios.post('http://localhost:5000/api/upload', formData);\n      setIsIdentical(true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleFileChange1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleFileChange2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 1\n    }, this), isIdentical === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"The files are identical.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 26\n    }, this), isIdentical === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"The files are different.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 1\n  }, this);\n}\n_s(FileUpload, \"LpYmJj9D3W3KlVkYoQAz7f/taBE=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","FileUpload","fileInput1","setFileInput1","fileInput2","setFileInput2","isIdentical","setIsIdentical","handleFileChange1","event","target","files","handleFileChange2","handleUpload","formData","FormData","i","length","append","post","error","console"],"sources":["/home/coga/Desktop/pass/frontend/src/FileUpload.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// function FileUpload() {\n//   const [fileInput1, setFileInput1] = useState(null);\n//   const [fileInput2, setFileInput2] = useState(null);\n//   const [filenames, setFilenames] = useState([]);\n//   const [isIdentical, setIsIdentical] = useState(null);\n\n//   const handleFileChange1 = (event) => {\n//     setFileInput1(event.target.files);\n//   };\n  \n//   const handleFileChange2 = (event) => {\n//     setFileInput2(event.target.files);\n//   };\n\n//   const handleUpload = async () => {\n//     const formData = new FormData();\n//     for (let i = 0; i < fileInput1.length; i++) {\n//       formData.append(\"files1\", fileInput1[i]);\n//     }\n    \n//     for (let i = 0; i < fileInput2.length; i++) {\n//       formData.append(\"files2\", fileInput2[i]);\n//     }\n\n//     try {\n//       const response = await axios.post('http://localhost:5000/api/upload', formData);\n//       setFilenames([...filenames, ...response.data.filenames]);\n//       const checksum1 = response.data.checksum1;\n//       const checksum2 = response.data.checksum2;\n//       setIsIdentical(checksum1 === checksum2);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"file\" multiple onChange={handleFileChange1} />\n//       <input type=\"file\" multiple onChange={handleFileChange2} />\n//       <button onClick={handleUpload}>Upload</button>\n//       <ul>\n//         {filenames.map((filename, index) => (\n//           <li key={index}>{filename}</li>\n//         ))}\n//       </ul>\n//       {isIdentical === true && <div>The files are identical.</div>}\n//       {isIdentical === false && <div>The files are different.</div>}\n//     </div>\n//   );\n// }\n\n// export default FileUpload;\n\n\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction FileUpload() {\nconst [fileInput1, setFileInput1] = useState(null);\nconst [fileInput2, setFileInput2] = useState(null);\nconst [isIdentical, setIsIdentical] = useState(null);\n\nconst handleFileChange1 = (event) => {\nsetFileInput1(event.target.files);\n};\n\nconst handleFileChange2 = (event) => {\nsetFileInput2(event.target.files);\n};\n\nconst handleUpload = async () => {\nconst formData = new FormData();\nfor (let i = 0; i < fileInput1.length; i++) {\nformData.append(\"files1\", fileInput1[i]);\n}\n\nfor (let i = 0; i < fileInput2.length; i++) {\n  formData.append(\"files2\", fileInput2[i]);\n}\n\ntry {\n  await axios.post('http://localhost:5000/api/upload', formData);\n  setIsIdentical(true);\n} catch (error) {\n  console.error(error);\n}\n};\n\nreturn (\n<div>\n<input type=\"file\" multiple onChange={handleFileChange1} />\n<input type=\"file\" multiple onChange={handleFileChange2} />\n<button onClick={handleUpload}>Upload</button>\n{isIdentical === true && <div>The files are identical.</div>}\n{isIdentical === false && <div>The files are different.</div>}\n</div>\n);\n}\n\nexport default FileUpload;\n\n\n\n\n\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,UAAU,GAAG;EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACrCN,aAAa,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,iBAAiB,GAAIH,KAAK,IAAK;IACrCJ,aAAa,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAME,YAAY,GAAG,YAAY;IACjC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,UAAU,CAACe,MAAM,EAAED,CAAC,EAAE,EAAE;MAC5CF,QAAQ,CAACI,MAAM,CAAC,QAAQ,EAAEhB,UAAU,CAACc,CAAC,CAAC,CAAC;IACxC;IAEA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,UAAU,CAACa,MAAM,EAAED,CAAC,EAAE,EAAE;MAC1CF,QAAQ,CAACI,MAAM,CAAC,QAAQ,EAAEd,UAAU,CAACY,CAAC,CAAC,CAAC;IAC1C;IAEA,IAAI;MACF,MAAMhB,KAAK,CAACmB,IAAI,CAAC,kCAAkC,EAAEL,QAAQ,CAAC;MAC9DP,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACA,CAAC;EAED,oBACA;IAAA,wBACA;MAAO,IAAI,EAAC,MAAM;MAAC,QAAQ;MAAC,QAAQ,EAAEZ;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG,eAC3D;MAAO,IAAI,EAAC,MAAM;MAAC,QAAQ;MAAC,QAAQ,EAAEI;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG,eAC3D;MAAQ,OAAO,EAAEC,YAAa;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS,EAC7CP,WAAW,KAAK,IAAI,iBAAI;MAAA,UAAK;IAAwB;MAAA;MAAA;MAAA;IAAA,QAAM,EAC3DA,WAAW,KAAK,KAAK,iBAAI;MAAA,UAAK;IAAwB;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACvD;AAEN;AAAC,GAxCQL,UAAU;AAAA,KAAVA,UAAU;AA0CnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}