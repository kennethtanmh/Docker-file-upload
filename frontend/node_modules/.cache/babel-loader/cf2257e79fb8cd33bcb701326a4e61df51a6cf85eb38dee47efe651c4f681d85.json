{"ast":null,"code":"var _jsxFileName = \"/home/coga/Desktop/pass/frontend/src/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload() {\n  _s();\n  const [fileInput1, setFileInput1] = useState(null);\n  const [fileInput2, setFileInput2] = useState(null);\n  const [filenames, setFilenames] = useState([]);\n  const [isIdentical, setIsIdentical] = useState(null);\n  const handleFileChange1 = event => {\n    setFileInput1(event.target.files);\n  };\n  const handleFileChange2 = event => {\n    setFileInput2(event.target.files);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    for (let i = 0; i < fileInput1.length; i++) {\n      formData.append(\"files1\", fileInput1[i]);\n    }\n    for (let i = 0; i < fileInput2.length; i++) {\n      formData.append(\"files2\", fileInput2[i]);\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/upload', formData);\n      const responseData = response.data;\n      setFilenames([responseData.file1_name, responseData.file2_name]);\n      const checksum1 = response.data.file1_hash;\n      const checksum2 = response.data.file2_hash;\n      setIsIdentical(checksum1 === checksum2);\n      console.log(isIdentical);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleFileChange1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleFileChange2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filenames.map((filename, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: filename\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), isIdentical === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"The files are identical.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 32\n    }, this), isIdentical === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"The files are different.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"F0LwnglgXYrw3X8rvX2uZjZAwE8=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","FileUpload","fileInput1","setFileInput1","fileInput2","setFileInput2","filenames","setFilenames","isIdentical","setIsIdentical","handleFileChange1","event","target","files","handleFileChange2","handleUpload","formData","FormData","i","length","append","response","post","responseData","data","file1_name","file2_name","checksum1","file1_hash","checksum2","file2_hash","console","log","error","map","filename","index"],"sources":["/home/coga/Desktop/pass/frontend/src/FileUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction FileUpload() {\n  const [fileInput1, setFileInput1] = useState(null);\n  const [fileInput2, setFileInput2] = useState(null);\n  const [filenames, setFilenames] = useState([]);\n  const [isIdentical, setIsIdentical] = useState(null);\n\n  const handleFileChange1 = (event) => {\n    setFileInput1(event.target.files);\n  };\n  \n  const handleFileChange2 = (event) => {\n    setFileInput2(event.target.files);\n  };\n\n  const handleUpload = async () => {\n    const formData = new FormData();\n    for (let i = 0; i < fileInput1.length; i++) {\n      formData.append(\"files1\", fileInput1[i]);\n    }\n    \n    for (let i = 0; i < fileInput2.length; i++) {\n      formData.append(\"files2\", fileInput2[i]);\n    }\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/upload', formData); \n      const responseData = response.data\n\n\n      setFilenames([responseData.file1_name, responseData.file2_name]);\n      const checksum1 = response.data.file1_hash;\n      const checksum2 = response.data.file2_hash;\n      setIsIdentical(checksum1 === checksum2);\n      console.log(isIdentical)\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" multiple onChange={handleFileChange1} />\n      <input type=\"file\" multiple onChange={handleFileChange2} />\n      <button onClick={handleUpload}>Upload</button>\n      <ul>\n        {filenames.map((filename, index) => (\n          <li key={index}>{filename}</li>\n        ))}\n      </ul>\n      {isIdentical === true && <div>The files are identical.</div>}\n      {isIdentical === false && <div>The files are different.</div>}\n    </div>\n  );\n}\n\nexport default FileUpload;\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}