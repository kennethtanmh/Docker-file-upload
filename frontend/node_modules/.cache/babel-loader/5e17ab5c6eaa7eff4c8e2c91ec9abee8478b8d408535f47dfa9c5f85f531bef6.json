{"ast":null,"code":"var _jsxFileName = \"/home/coga/Desktop/pass/frontend/src/FileUpload.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// function FileUpload() {\n//   const [fileInput, setFileInput] = useState(null);\n//   const [filenames, setFilenames] = useState([]);\n\n//   const handleFileChange = (event) => {\n//     setFileInput(event.target.files);\n//   };\n\n//   const handleUpload = async () => {\n//     const formData = new FormData();\n//     for (let i = 0; i < fileInput.length; i++) {\n//       formData.append(\"files\", fileInput[i]);\n//     }\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/api/upload\", formData);\n//       setFilenames([...filenames, ...response.data.filenames]);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"file\" multiple onChange={handleFileChange} />\n//       <button onClick={handleUpload}>Upload</button>\n//       <ul>\n//         {filenames.map((filename, index) => (\n//           <li key={index}>{filename}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default FileUpload;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [filenames, setFilenames] = useState([]);\n  const [checksumMatch, setChecksumMatch] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/upload\", formData);\n      if (response.data.error) {\n        setChecksumMatch(false);\n      } else {\n        setFilenames(response.data.filenames);\n        setChecksumMatch(true);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 1\n    }, this), filenames.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Files uploaded successfully:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filenames.map(filename => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: filename\n        }, filename, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 1\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 1\n    }, this), checksumMatch === false && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"File with the same name but different content already exists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }, this), checksumMatch === true && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"File checksum matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 1\n  }, this);\n};\n_s(FileUpload, \"pDAJy65vtiSIR/xZqpsbxz+LptQ=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","FileUpload","file","setFile","filenames","setFilenames","checksumMatch","setChecksumMatch","handleFileChange","e","target","files","handleUpload","preventDefault","formData","FormData","append","response","post","data","error","console","length","map","filename"],"sources":["/home/coga/Desktop/pass/frontend/src/FileUpload.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// function FileUpload() {\n//   const [fileInput, setFileInput] = useState(null);\n//   const [filenames, setFilenames] = useState([]);\n\n//   const handleFileChange = (event) => {\n//     setFileInput(event.target.files);\n//   };\n\n//   const handleUpload = async () => {\n//     const formData = new FormData();\n//     for (let i = 0; i < fileInput.length; i++) {\n//       formData.append(\"files\", fileInput[i]);\n//     }\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/api/upload\", formData);\n//       setFilenames([...filenames, ...response.data.filenames]);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"file\" multiple onChange={handleFileChange} />\n//       <button onClick={handleUpload}>Upload</button>\n//       <ul>\n//         {filenames.map((filename, index) => (\n//           <li key={index}>{filename}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default FileUpload;\n\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst FileUpload = () => {\nconst [file, setFile] = useState(null);\nconst [filenames, setFilenames] = useState([]);\nconst [checksumMatch, setChecksumMatch] = useState(null);\n\nconst handleFileChange = (e) => {\nsetFile(e.target.files[0]);\n};\n\nconst handleUpload = async (e) => {\ne.preventDefault();\nconst formData = new FormData();\nformData.append(\"file\", file);\ntry {\nconst response = await axios.post(\"http://localhost:5000/api/upload\", formData);\nif (response.data.error) {\nsetChecksumMatch(false);\n} else {\nsetFilenames(response.data.filenames);\nsetChecksumMatch(true);\n}\n} catch (error) {\nconsole.error(error);\n}\n};\n\nreturn (\n<div>\n<form>\n<input type=\"file\" onChange={handleFileChange} />\n<button type=\"submit\" onClick={handleUpload}>\nUpload\n</button>\n</form>\n{filenames.length > 0 && (\n<div>\n<p>Files uploaded successfully:</p>\n<ul>\n{filenames.map((filename) => (\n<li key={filename}>{filename}</li>\n))}\n</ul>\n</div>\n)}\n{checksumMatch === false && <p>File with the same name but different content already exists</p>}\n{checksumMatch === true && <p>File checksum matches</p>}\n</div>\n);\n};\n\nexport default FileUpload;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,UAAU,GAAG,MAAM;EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAChCN,OAAO,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAClCA,CAAC,CAACI,cAAc,EAAE;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEd,IAAI,CAAC;IAC7B,IAAI;MACJ,MAAMe,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,kCAAkC,EAAEJ,QAAQ,CAAC;MAC/E,IAAIG,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;QACzBb,gBAAgB,CAAC,KAAK,CAAC;MACvB,CAAC,MAAM;QACPF,YAAY,CAACY,QAAQ,CAACE,IAAI,CAACf,SAAS,CAAC;QACrCG,gBAAgB,CAAC,IAAI,CAAC;MACtB;IACA,CAAC,CAAC,OAAOa,KAAK,EAAE;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB;EACA,CAAC;EAED,oBACA;IAAA,wBACA;MAAA,wBACA;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEZ;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAG,eACjD;QAAQ,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEI,YAAa;QAAA,UAAC;MAE7C;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,EACNR,SAAS,CAACkB,MAAM,GAAG,CAAC,iBACrB;MAAA,wBACA;QAAA,UAAG;MAA4B;QAAA;QAAA;QAAA;MAAA,QAAI,eACnC;QAAA,UACClB,SAAS,CAACmB,GAAG,CAAEC,QAAQ,iBACxB;UAAA,UAAoBA;QAAQ,GAAnBA,QAAQ;UAAA;UAAA;UAAA;QAAA,QAChB;MAAC;QAAA;QAAA;QAAA;MAAA,QACG;IAAA;MAAA;MAAA;MAAA;IAAA,QAEJ,EACAlB,aAAa,KAAK,KAAK,iBAAI;MAAA,UAAG;IAA4D;MAAA;MAAA;MAAA;IAAA,QAAI,EAC9FA,aAAa,KAAK,IAAI,iBAAI;MAAA,UAAG;IAAqB;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACjD;AAEN,CAAC;AAAC,GAhDIL,UAAU;AAAA,KAAVA,UAAU;AAkDhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}